---
import { generateImage, generatePlaceholder } from "astro-eleventy-img";

const { title, url, image, index } = Astro.props;

const widths = [450, 800];
const sizes = "(min-width: 1024px) 33vw, (min-width: 768px) 50vw, 100vw";
const { webp, avif, png } = generateImage(image, {
  widths,
  formats: ["webp", "avif", "png"],
  outputDir: "public/assets/images/work",
  urlPath: "/assets/images/work",
});
const avifSrcset = avif.map(({ srcset }) => srcset).join(",");
const webpSrcset = webp.map(({ srcset }) => srcset).join(",");
const pngSrcset = png.map(({ srcset }) => srcset).join(",");
const placeholder = await generatePlaceholder(image, {
  outputDir: "src/assets/placeholders/showcase",
});
---

<div
  class={`flex ${
    index % 2 === 0 ? "flex-row" : "flex-row-reverse"
  } border-2 border-white rounded-md hover:border-orange-400`}
>
  <div class="w-full p-2">
    <h1 class="text-2xl font-bold">{title}</h1>
    <p class="text-lg">description</p>
    <a href={url} class="btn btn-primary"> text</a>
  </div>
  <div class="w-full p-2">
    <a href="#">
      <picture>
        <source type="image/avif" srcset={avifSrcset} {sizes} />
        <source type="image/webp" srcset={webpSrcset} {sizes} />
        <source type="image/jpeg" srcset={pngSrcset} {sizes} />
        <img
          src={png[1].url}
          width={png[1].width}
          height={png[1].height}
          loading="lazy"
          decoding="async"
          onload="this.style.backgroundImage='none'"
          style={`background-image: url(${placeholder.dataURI});`}
          alt={`A screenshot of ${url}`}
        />
      </picture>
    </a>
  </div>
</div>
